/* ta.js (c) Nino Kroesen. MIT License. */ async function median(n,e=n.length){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t);a.sort((n,e)=>n-e),_.push(a[Math.round(a.length/2)-1])}return _}async function kmeans(n,e){for(var t,_=[],a=[],r=[],l=!1,$=Math.round(n.length/(e+1)),s=0;s<e;s++)a[s]=n[$*(s+1)];do{for(var s=0;s<e;s++)_[s]=[];for(var i=0;i<n.length;i++){for(var u=-1,h=0;h<e;h++){var o=Math.abs(a[h]-n[i]);-1===u?(u=o,t=h):o<=u&&(u=o,t=h)}_[t].push(n[i])}r=a;for(var i=0;i<e;i++){var p=0;for(h=0;h<_[i].length;h++)p+=_[i][h];var c=p/_[t].length;a[i]=c}for(var i=0;i<e;i++)a[i]!==r[i]&&(l=!0)}while(l);return _}async function normalize(n,e=0){for(var t=0,_=await Math.max.apply(null,n.slice())*(1+e),a=await Math.min.apply(null,n.slice())*(1-e),r=[];t<n.length;t++)r.push(1-(_-n[t])/(_-a));return r}async function denormalize(n,e,t=0){for(var _=0,a=await Math.max.apply(null,n.slice())*(1+t),r=await Math.min.apply(null,n.slice())*(1-t),l=[];_<e.length;_++)l.push(r+e[_]*(a-r));return l}async function normalize_pair(n,e){for(var t=1,_=(n[0]+e[0])/2,a=[[_,_]];t<n.length;t++)a.push([a[a.length-1][0]*((n[t]-n[t-1])/n[t-1]+1),a[a.length-1][1]*((e[t]-e[t-1])/e[t-1]+1)]);return a}async function normalize_from(n,e){for(var t=1,_=[e];t<n.length;t++)_.push(_[_.length-1]*((n[t]-n[t-1])/n[t-1]+1));return _}async function standardize(n){for(var e=await module.exports.sma(n,n.length),t=await module.exports.std(n),_=[],a=0;a<n.length;a++)_.push((n[a]-e[0])/t);return _}async function mad(n,e=n.length){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=await module.exports.median(a),l=a.map(n=>Math.abs(n-r[r.length-1]));l=await module.exports.median(l),_.push(l[l.length-1])}return _}async function aad(n,e=n.length){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=0,l=await module.exports.sma(a,e);for(q in a)r+=Math.abs(a[q]-l[l.length-1]);_.push(r/e)}return _}async function ssd(n,e=n.length){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=await module.exports.sma(a,e),l=0;for(let $ in a)l+=(a[$]-r[r.length-1])**2;_.push(Math.sqrt(l))}return _}async function er(n){var e=[],t=[],_=1,a=1;for(let r in n)n[r]>=0?e.push(1+n[r]):t.push(1+n[r]);var l=e.length/n.length,$=t.length/n.length;for(let s in t)a*=t[s];for(let i in e)_*=e[i];return((_**(1/e.length)-1)*100*l+(a**(1/t.length)-1)*100*$)/100}async function ar(n,e=n.length){for(var t=e,_=[];t<n.length;t++){var a=await module.exports.er(n.slice(t-e,t));_.push(n[t]-a)}return _}async function kelly(n){var e=await module.exports.er(n)+1,t=await module.exports.winratio(n);return isNaN(e)&&(e=1),t-(1-t)/e}async function martingale(n,e,t,_=2){var a=e;for(let r in n)n[r]<0?a*=_:n[r]>0&&(a=e);return a>t?t:a}async function antimartingale(n,e,t,_=2){var a=e;for(let r in n)n[r]>0?a*=_:n[r]<0&&(a=e);return a>t?t:a}async function winratio(n){var e=0,t=0;for(let _ in n)n[_]>=0?e++:t++;return e/(t+e)}async function avgwin(n){for(var e=0,t=[];e<n.length;e++)n[e]>=0&&t.push(n[e]);return(await module.exports.sma(t,t.length))[0]}async function avgloss(n){for(var e=[],t=0;t<n.length;t++)n[t]<0&&e.push(n[t]);return(await module.exports.sma(e,e.length))[0]}async function zscore(n,e=n.length){for(var t=e-1,_=[],a=n.slice(0,e-1);t<n.length;t++){a.push(n[t]);var r=await module.exports.sma(a,e),l=await module.exports.std(a,e);_.push((n[t]-r[0])/l),a.splice(0,1)}return _}async function rsi(n,e=14){for(var t=e-1,_=0,a=0,r=[],l=n.slice(0,e-1);t<n.length;t++,_=0,a=0){l.push(n[t]);for(var $=1;$<l.length;$++)l[$]-l[$-1]<0?a+=Math.abs(l[$]-l[$-1]):_+=l[$]-l[$-1];var s=100-100/(1+_/e/(a/e));r.push(s),l.splice(0,1)}return r}async function wrsi(n,e=14){for(var t=1,_=[],a=[],r=[];t<n.length;t++)n[t]-n[t-1]<0?(r.push(Math.abs(n[t]-n[t-1])),a.push(0)):(r.push(0),a.push(n[t]-n[t-1]));for(let l in r=await module.exports.wsma(r,e),a=await module.exports.wsma(a,e),r)_.push(100-100/(1+a[l]/r[l]));return _}async function tsi(n,e=25,t=13,_=13){for(var a=1,r=[],l=[],$=[],s=[];a<n.length;a++)r.push(n[a]-n[a-1]),l.push(Math.abs(n[a]-n[a-1]));for(var i=await module.exports.ema(r,e),u=await module.exports.ema(l,e),h=await module.exports.ema(i,t),o=await module.exports.ema(u,t),a=0;a<h.length;a++)$.push(h[a]/o[a]);var p=await module.exports.ema($,_);$.splice(0,$.length-p.length);for(var a=0;a<p.length;a++)s.push([p[a],$[a]]);return s}async function bop(n,e=14){var t=n.map(n=>(n[3]-n[0])/(n[1]-n[2])),t=await module.exports.sma(t,e);return t}async function fi(n,e=13){for(var t=1,_=[],a=[];t<n.length;t++)if(_.push((n[t][0]-n[t-1][0])*n[t][1]),_.length>=e){var r=await module.exports.ema(_,e);a.push(r[r.length-1]),_.splice(0,1)}return a}async function asi(n){for(var e=1,t=[];e<n.length;e++){var _,a=n[e][1],r=n[e-1][1],l=n[e][0],$=n[e-1][0],s=n[e][2],i=n[e-1][2],u=$-a>i-a?$-a:i-a,h=n[e][0],o=n[e-1][0],p=Math.max(n[e][0],n[e-1][0])-Math.min(n[e][2],n[e-1][2]);l-r>s-r&&l-r>l-s&&(_=l-r-(s-r)/2+(r-o)/4),s-r>l-r&&s-r>l-s&&(_=s-r-(l-r)/2+(r-o)/4),l-s>l-r&&l-s>s-r&&(_=l-s+(r-o)/4),t.push(50*((r-a+(r-o)/2+(a-h)/2)/_)*u/p)}return t}async function ao(n,e=5,t=35){n=n.map(n=>(n[0]+n[1])/2);for(var _=t,a=[];_<=n.length;_++){var r=n.slice(_-t,_),l=await module.exports.sma(r,e),$=await module.exports.sma(r,t);a.push(l[l.length-1]-$[$.length-1])}return a}async function ac(n,e=5,t=35){var _=await ao(n,e,t),a=await sma(_,e),r=[];for(let l in _.length>a.length?_.splice(0,_.length-a.length):a.splice(0,a.length-_.length),_)r.push(_[l]-a[l]);return r}const fib=async(n,e)=>[n,(e-n)*.236+n,(e-n)*.382+n,(e-n)*.5+n,(e-n)*.618+n,(e-n)*.786+n,e,(e-n)*1.618+n,(e-n)*2.618+n,(e-n)*3.618+n,(e-n)*4.236+n];async function pr(n,e=14){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=await Math.max.apply(null,a),l=await Math.min.apply(null,a);_.push(-((r-n[t-1])/(r-l)*100))}return _}async function lsma(n,e=25){for(var t=e,_=[];t<=n.length;t++){for(var a,r,l=n.slice(t-e,t),$=0,s=0,i=0,u=0,h=0,o=1;o<=e;o++)$+=o,s+=l[o-1],i+=l[o-1]*o,u+=o*o,h+=l[o-1]*l[o-1];a=(i-$*s/e)/(u-$*$/e),r=s/e-a*$/e,_.push(a*e+r)}return _}async function don(n,e=20){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=[],l=[];for(let $ in a)r.push(a[$][0]),l.push(a[$][1]);var s=Math.max.apply(null,r.slice()),i=Math.min.apply(null,l.slice());_.push([s,(s+i)/2,i])}return _}async function ichimoku(n,e=9,t=26,_=52,a=26){for(var r=0,l=[],$=[],s=[];r<n.length;r++)if(l.push(n[r]),l.length>=_){var i=[],u=[];for(let h in l)i.push(l[h][0]),u.push(l[h][2]);var o=(Math.max.apply(null,i.slice(i.length-e,i.length))+Math.min.apply(null,u.slice(u.length-e,u.length)))/2,p=(Math.max.apply(null,i.slice(i.length-t,i.length))+Math.min.apply(null,u.slice(u.length-t,u.length)))/2,c=n[r][1]+p,g=(Math.max.apply(null,i.slice(i.length-_,i.length))+Math.min.apply(null,u.slice(u.length-t,u.length)))/2;chik=n[r][1],s.push([o,p,c,g,chik]),l.splice(0,1)}for(var r=a;r<s.length-a;r++)$.push([s[r][0],s[r][1],s[r+a][2],s[r+a][3],s[r-a][4]]);return $}async function stoch(n,e=14,t=3,_=3){e<t&&([e,t]=[t,e]),_>t&&([_,t]=[t,_]);for(var a=0,r=[],l=[],$=[],s=[];a<n.length;a++){if(l.push(n[a][0]),$.push(n[a][2]),l.length>=e){var i=await Math.max.apply(null,l),u=await Math.min.apply(null,$),h=100*(n[a][1]-u)/(i-u);s.push(h)}if(_>0&&s.length>_){var o=await module.exports.sma(s,_);s.push(o[o.length-1])}if(s.length-_>=t){var p=await module.exports.sma(s,t);r.push([h,p[p.length-1]]),l.splice(0,1),$.splice(0,1),s.splice(0,1)}}return r}async function atr(n,e=14){for(var t=1,_=[n[0][0]-n[0][2]];t<n.length;t++){var a=await Math.max(n[t][0]-n[t-1][1],n[t][2]-n[t-1][1],n[t][0]-n[t][2]);_.push((_[_.length-1]*(e-1)+a)/e)}return _}async function sma(n,e=14){for(var t=e,_=[];t<=n.length;t++){let a=await module.exports.sum(n.slice(t-e,t));_.push(a/e)}return _}async function smma(n,e=14){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=0;for(q in a)r+=a[q];_.length<=0?_.push(r/e):_.push((r-_[_.length-1])/e)}return _.splice(0,1),_}async function wma(n,e=14){for(var t=1,_=0,a=[];t<=e;t++)_+=t;for(var t=e;t<=n.length;t++){var r=n.slice(t-e,t),l=0;for(q in r)l+=r[q]*(Number(q)+1)/_;a.push(l)}return a}async function wsma(n,e=14){for(var t=e,_=[],a=1/e;t<=n.length;t++){if(_.length>0){_.push((n[t-1]-_[_.length-1])*a+_[_.length-1]);continue}var r=n.slice(t-e,t),l=0;for(q in r)l+=r[q];_.push(l/e)}return _}async function pwma(n,e=14){for(var t=e/2,_=e,a=0,r=[],l=[];t>=1;t--,_--)t%1!=0?a+=(t=Math.round(t))*_:(l.push(t*_),a+=t*_*2),l.unshift(t*_);for(var t=e;t<=n.length;t++){for(var $=0,s=n.slice(t-e,t),i=e-1;i>=0;i--)$+=s[i]*l[i]/a;r.push($)}return r}async function hwma(n,e=14){for(var t=1,_=e,a=0,r=[],l=[];t<=e/2;t++,_--)t%1!=0?a+=(t=Math.round(t))*_:(l.push(t*_),a+=t*_*2),l.unshift(t*_);for(var t=e;t<=n.length;t++){for(var $=0,s=n.slice(t-e,t),i=e-1;i>=0;i--)$+=s[i]*l[i]/a;r.push($)}return r}async function vwma(n,e=20){n=n.map(n=>[n[0]*n[1],n[1]]);for(var t=e,_=[];t<=n.length;t++){for(var a=n.slice(t-e,t),r=0,l=0,$=0;$<a.length;$++)r+=a[$][1],l+=a[$][0];_.push(l/r)}return _}async function ema(n,e=12){for(var t=e,_=[],a=2/(e+1);t<=n.length;t++){if(_.length>0){_.push((n[t-1]-_[_.length-1])*a+_[_.length-1]);continue}var r=n.slice(t-e,t),l=0;for(q in r)l+=r[q];_.push(l/e)}return _}async function hull(n,e=14){var t=[],_=[],a=await module.exports.wma(n,e),r=Math.round(Math.sqrt(e)),l=await wma(n,Math.round(e/2));for(let $ in l.splice(0,l.length-a.length),a)if(t.push(2*l[$]-a[$]),t.length>=r){var s=await wma(t,r);_.push(s[0]),t.splice(0,1)}return _}async function kama(n,e=10,t=2,_=30){for(var a=e+1,r=await module.exports.sma(n,e),r=[r[r.length-1]];a<n.length;a++){for(var l=0,$=Math.abs(n[a]-n[a-e]),s=1;s<e;s++)l+=Math.abs(n[a-s]-n[a-s-1]);var i=($/l*(2/(t+1)-2/(_+1)+2/(_+1)))**2;r.push(r[r.length-1]+i*(n[a]-r[r.length-1]))}return r}async function macd(n,e=12,t=26){e>t&&([e,t]=[t,e]);var _=await module.exports.ema(n,e),a=await module.exports.ema(n,t),r=[];_.splice(0,t-e);for(var l=0;l<a.length;l++)r.push(_[l]-a[l]);return r}async function macd_signal(n,e=12,t=26,_=9){return await module.exports.ema(await module.exports.macd(n,e,t),_)}async function macd_bars(n,e=12,t=26,_=9){var a=await module.exports.macd(n,e,t),r=await module.exports.ema(a,_),l=[];for(let $ in a.splice(0,a.length-r.length),a)l.push(a[$]-r[$]);return l}async function bands(n,e=14,t=1){for(var _=0,a=[],r=[],l=[],$=await module.exports.sma(n,e);_<n.length;_++)if(a.push(n[_]),a.length>=e){var s=await module.exports.std(a,e);r.push(s),a.splice(0,1)}for(var _=0;_<$.length;_++)l.push([$[_]+r[_]*t,$[_],$[_]-r[_]*t]);return l}async function bandwidth(n,e=14,t=1){for(var _=0,a=[],r=await module.exports.bands(n,e,t);_<r.length;_++)a.push((r[_][0]-r[_][2])/r[_][1]);return a}async function keltner(n,e=14,t=1){var _,a=[],r=await module.exports.atr(n,e),l=[];for(let $ in n)a.push((n[$][0]+n[$][1]+n[$][2])/3);_=await module.exports.sma(a,e),r.splice(0,e-1);for(var s=0;s<_.length;s++)l.push([_[s]+r[s]*t,_[s],_[s]-r[s]*t]);return l}async function variance(n,e=n.length){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=await module.exports.sma(a,e),l=0;for(x in a)l+=(a[x]-r[r.length-1])**2;_.push(l/e)}return _}async function std(n,e=n.length){e<n.length&&n.splice(0,n.length-e);var t=n.reduce((n,e)=>n+e)/e;return Math.sqrt(n.reduce((n,e)=>n+Math.pow(e-t,2),0)/e)}async function normsinv(n){if(n<0||n>1)return 0;if(n<.02425){var e=Math.sqrt(-2*Math.log(n));return(((((-.00778489400243029*e+-.322396458041136)*e+-2.40075827716184)*e+-2.54973253934373)*e+4.37466414146497)*e+2.93816398269878)/((((.00778469570904146*e+.32246712907004)*e+2.445134137143)*e+3.75440866190742)*e+1)}if(n<=.97575){var e=n-.5,t=e*e;return(((((-39.6968302866538*t+220.946098424521)*t+-275.928510446969)*t+138.357751867269)*t+-30.6647980661472)*t+2.50662827745924)*e/(((((-54.4760987982241*t+161.585836858041)*t+-155.698979859887)*t+66.8013118877197)*t+-13.2806815528857)*t+1)}var e=Math.sqrt(-2*Math.log(1-n));return-(((((-.00778489400243029*e+-.322396458041136)*e+-2.40075827716184)*e+-2.54973253934373)*e+4.37466414146497)*e+2.93816398269878)/((((.00778469570904146*e+.32246712907004)*e+2.445134137143)*e+3.75440866190742)*e+1)}async function sim(n,e=50,t=1e3,_){for(var a=0,r=[];a<t;a++){for(var l=n.slice(),$=0;$<e;$++){for(var s=[],i=1;i<l.length;i++){var u=await module.exports.dif(l[i],l[i-1]);s.push(u)}var h=await module.exports.sma(s,s.length),o=await module.exports.std(s),p=await module.exports.normsinv(Math.random());l.push(l[l.length-1]*Math.exp(h[0]-o*o/2+o*p))}r.push(l)}return _?await module.exports.percentile(r,_):r}async function percentile(n,e){for(var t=0,_=[];t<n[0].length;t++)n.sort((n,e)=>n[t]-e[t]),_.push(n[Math.round((n.length-1)*e)][t]);return _}async function cor(n,e){for(var t=await module.exports.sma(n,n.length),_=await module.exports.sma(e,e.length),a=0,r=0,l=0,$=0;$<n.length;$++){var s=n[$]-t,i=e[$]-_;a+=s*i,r+=Math.pow(s,2),l+=Math.pow(i,2)}var u=n.length-1;return r/=u,l/=u,a/(u*(r=Math.sqrt(r))*(l=Math.sqrt(l)))}const dif=async(n,e)=>(n-e)/e,log=async n=>n.map(n=>Math.log(n)),exp=async n=>n.map(n=>Math.exp(n));async function drawdown(n){for(var e=1,t=n[0],_=n[0],a=0;e<n.length;e++){if(n[e]>t){if(0!=_){var r=await module.exports.dif(_,t);r<a&&(a=r),_=n[e]}t=n[e]}n[e]<_&&(_=n[e])}var r=await module.exports.dif(_,t);return r<a&&(a=r),a}async function aroon_up(n,e=10){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=a.slice();r.sort((n,e)=>n-e),_.push(100*(e-1-a.reverse().findIndex(n=>n===r[e-1]))/(e-1))}return _}async function aroon_down(n,e=10){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=a.slice();r.sort((n,e)=>n-e),_.push(100*(e-1-a.reverse().findIndex(n=>n===r[0]))/(e-1))}return _}async function aroon_osc(n,e=25){for(var t=0,_=[],a=await module.exports.aroon.up(n,e),r=await module.exports.aroon.down(n,e);t<a.length;t++)_.push(a[t]-r[t]);return _}async function mfi(n,e=14){for(var t=e,_=[],a=n.map(n=>n[1]),r=n.map(n=>n[0]),l=0,$=0;t<=n.length;t++,l=0,$=0){for(q=t-e;q<t;q++)l+=r[q],$+=a[q];_.push(100-100/(1+l/$))}return _}async function roc(n,e=14){for(var t=e,_=[];t<=n.length;t++)_.push((n[t-1]-n[t-e])/n[t-e]);return _}async function cop(n,e=11,t=14,_=10){for(var a=Math.max(e,t),r=[],l=a+_;l<n.length;l++){var $=n.slice(l-(a+_),l),s=$.slice(),i=[];$=await module.exports.roc($,e),s=await module.exports.roc(s,t),$.splice(0,$.length-s.length),s.splice(0,s.length-$.length);for(var u=0;u<$.length;u++)i.push($[u]+s[u]);i=await module.exports.wma(i,_),r.push(i[i.length-1])}return r}async function kst(n,e=10,t=15,_=20,a=30,r=10,l=10,$=10,s=15,i=9){for(var u=[],h=[],o=Math.max(e,t,_,a)+Math.max(r,l,$,s),p=o;p<=n.length;p++){var c=n.slice(p-o,p),g=await module.exports.roc(c,e),f=await module.exports.roc(c,t),v=await module.exports.roc(c,_),m=await module.exports.roc(c,a);g=await module.exports.sma(g,r),f=await module.exports.sma(f,l),v=await module.exports.sma(v,$),m=await module.exports.sma(m,s),u.push(g[g.length-1]+f[f.length-1]+v[v.length-1]+m[m.length-1])}var w=await module.exports.sma(u,i);for(var p in u.splice(0,u.length-w.length),w)h.push([u[p],w[p]]);return h}async function obv(n){for(var e=1,t=[0];e<n.length;e++)n[e][1]>n[e-1][1]&&t.push(t[t.length-1]+n[e][0]),n[e][1]<n[e-1][1]&&t.push(t[t.length-1]-n[e][0]),n[e][1]===n[e-1][1]&&t.push(t[t.length-1]);return t}async function vwap(n,e=n.length){n=n.map(n=>[n[0]*n[1],n[1]]);for(var t=e,_=[];t<=n.length;t++){for(var a=n.slice(t-e,t),r=0,l=0,$=0;$<a.length;$++)r+=a[$][1],l+=a[$][0];_.push(l/r)}return _}async function mom(n,e=10,t){for(var _=e-1,a=[];_<n.length;_++)t?a.push(n[_]/n[_-(e-1)]*100):a.push(n[_]-n[_-(e-1)]);return a}async function mom_osc(n,e=10){e++;for(var t=e,_=[],a=0,r=0;t<=n.length;t++,a=0,r=0){for(var l=1;l<e;l++)n[t-e+(l-1)]<n[t-e+l]?a+=n[t-e+l]:r+=n[t-e+l];_.push((a-r)/(a+r)*100)}return _}async function ha(n){for(var e=[[(n[0][0]+n[0][3])/2,n[0][1],n[0][2],(n[0][0]+n[0][1]+n[0][2]+n[0][3])/4]],t=1;t<n.length;t++)e.push([(e[e.length-1][0]+e[e.length-1][3])/2,Math.max(e[e.length-1][0],e[e.length-1][3],n[t][1]),Math.min(e[e.length-1][0],e[e.length-1][3],n[t][2]),(n[t][0]+n[t][1]+n[t][2]+n[t][3])/4]);return e}async function ren(n,e=1){for(var t=[],_=Math.floor(e)===e?0:e.toString().split(".")[1].length||0,a=Math.ceil(n[0][0]/e*10**_)/10**_*e,r=a-e,l=1;l<n.length;l++){if(n[l][0]>a+e)do t.push([a,a+e,a,a+e]),a+=e,r+=e;while(n[l][0]>a+e);if(n[l][1]<r-e)do t.push([r,r,r-e,r-e]),a-=e,r-=e;while(n[l][1]<r-e)}return t}async function envelope(n,e=10,t=.005){for(var _=e,a=[];_<n.length;_++){var r=await module.exports.sma(n.slice(_-e,_),e);a.push([r[0]*(1+t),r[0],r[0]*(1-t)])}return a}async function chaikin_osc(n,e=3,t=10){for(var _=0,a=[],r=[];_<n.length;_++){var l=(n[_][1]-n[_][2]-(n[_][0]-n[_][1]))/(n[_][0]-n[_][2]);isNaN(l)?r.push(0):r.push(l*n[_][3])}var $=await module.exports.ema(r,e),s=await module.exports.ema(r,t);$.length>s.length?$.splice(0,$.length-s.length):s.splice(0,s.length-$.length);for(var _=0;_<$.length;_++)a.push($[_]-s[_]);return a}async function fractals(n){for(var e=[[!1,!1],[!1,!1]],t=2;t<n.length-2;t++){var _=n[t-2][0]<n[t][0]&&n[t-1][0]<n[t][0]&&n[t][0]>n[t+1][0]&&n[t][0]>n[t+2][0],a=n[t-2][1]>n[t][1]&&n[t-1][1]>n[t][1]&&n[t][1]<n[t+1][1]&&n[t][1]<n[t+2][1];e.push([_,a])}return e.push([!1,!1],[!1,!1]),e}async function alligator(n,e=13,t=8,_=5,a=8,r=5,l=3){var $=[],s=await module.exports.smma(n,e),i=await module.exports.smma(n,t),u=await module.exports.smma(n,_);i.splice(0,i.length-s.length),u.splice(0,u.length-s.length);for(var h=s.length-1;h>=7;h--)$.push([s[h-(a-1)],i[h-(r-1)],u[h-(l-1)]]);return $}async function gator(n,e=13,t=8,_=5,a=8,r=5,l=3){var $=[],s=await module.exports.smma(n,e),i=await module.exports.smma(n,t),u=await module.exports.smma(n,_);i.splice(0,i.length-s.length),u.splice(0,u.length-s.length);for(var h=s.length-1;h>=a-1;h--)$.push([s[h-(a-1)]-i[h-(r-1)],-Math.abs(i[h-(r-1)]-u[h-(l-1)])]);return $}async function recent_high(n,e=25){for(var t=n.length-2,_=e,a=0,r=n[n.length-1];t>=0&&(n[t]>=r&&_>0?(r=n[t],a=t,_=e):_--,!(_<=0));t--);return{index:a,value:r}}async function recent_low(n,e=25){for(var t=n.length-2,_=e,a=0,r=n[n.length-1];t>=0&&(n[t]<=r&&_>0?(r=n[t],a=t,_=e):_--,!(_<=0));t--);return{index:a,value:r}}async function support(n,e=recent_low(n)){var t,_,a=(e=await e).value;do{for(var r=e.index;r<n.length;r++){var l=(e.value-n[r])/(e.index-r);l<a&&(a=l,t=r)}e.index+1==t&&t!=n.length-1?(e.index=t,a=Math.min.apply(null,n.slice()),e.value=n[e.index],_=!1):_=!0,e.index==n.length-1&&(_=!0)}while(!_);return t==n.length-1||e.index==n.length-1?{calculate:async n=>e.value,slope:0,lowest:e.value,index:e.index}:{calculate:async n=>n*a+e.value,slope:a,lowest:e.value,index:e.index}}async function resistance(n,e){var t,_,a=(e=e||await recent_high(n)).value;do{for(var r=e.index;r<n.length;r++){var l=(n[r]-e.value)/(e.index-r);l<a&&(a=l,t=r)}e.index+1==t&&t!=n.length-1?(e.index=t,a=Math.max.apply(null,n.slice()),e.value=n[e.index],_=!1):_=!0,e.index==n.length-1&&(_=!0)}while(!_);return t==n.length-1||e.index==n.length-1?{calculate:async n=>e.value,slope:0,highest:e.value,index:e.index}:{calculate:async n=>-(n*a)+e.value,slope:a,highest:e.value,index:e.index}}async function fisher(n,e){var t=[],_=0,a=0;for(let r=e;r<=n.length;r++){var l=n.slice(r-e,r),$=_,s=Math.min.apply(null,l),a=.66*((n[r-1]-s)/(Math.max.apply(null,l)-s)-.5)+.67*a;a>.99&&(a=.999),a<-.99&&(a=-.999),_=.5*Math.log((1+a)/(1-a))+.5*$,t.push([_,$])}return t.slice(1,t.length)}async function cross(n,e){n.splice(0,n.length-e.length);for(var t=n[0]>e[0],_=[],a=0;a<n.length;a++)n[a]<e[a]&&t&&(_.push({index:a,cross:!1}),t=!1),n[a]>e[a]&&!t&&(_.push({index:a,cross:!0}),t=!0);return _}async function se(n,e){return e=e||n.length,await module.exports.std(n)/e**.5}async function halftrend(n,e,t,_){let a=[],r=[0],l=[0],$=[0],s=[0],i;for(let u=e;u<=n.length;u++){let h=n.slice(u-e,u);maxlow=h[h.length-2][2],minhigh=h[h.length-2][0];let o=_*(atr2=(atr2=await module.exports.atr(h,e))[atr2.length-1]/2),p=Math.max.apply(null,h.slice(h.length-1,h.length).map(n=>n[0])),c=Math.min.apply(null,h.slice(h.length-1,h.length).map(n=>n[2])),g=await module.exports.sma(h.slice(h.length-t,t).map(n=>n[0]),t),f=await module.exports.sma(h.slice(h.length-t,t).map(n=>n[2]),t);if(1==r[r.length-1]?(maxlow=Math.max(c,maxlow),g[0]<maxlow&&h[h.length-1][1]<h[h.length-2][2]&&(l.push(1),r.push(0),minhigh=h[h.length-2][0])):(minhigh=Math.min(p,minhigh),f[0]>minhigh&&h[h.length-1][1]<h[h.length-2][0]&&(l.push(0),r.push(1),maxlow=c)),0==l[l.length-1]){isNaN(l[l.length-2])||0==l[l.length-2]?$.push(isNaN($[$.length-2])?maxlow:Math.max($[$.length-2],maxlow)):$.push(isNaN(s[s.length-2])?s[s.length-1]:s[s.length-2]),i="long";var v=$[$.length-1]+o,m=$[$.length-1]-o}else{isNaN(l[l.length-2])||1==l[l.length-2]?s.push(isNaN(s[s.length-2])?minhigh:Math.min(minhigh,s[s.length-2])):s.push(isNaN($[$.len-2])?$[$.length-1]:$[$.length-2]),i="short";var v=s[s.length-1]+o,m=s[s.length-1]-o}a.push([v,0==l[l.length-1]?$[$.length-1]:s[s.length-1],m,i])}return a}const sum=async n=>n.reduce((n,e)=>n+e);async function covariance(n,e,t){let _=[];await module.exports.sma(n,n.length),await module.exports.sma(e,e.length);for(let a=t;a<=n.length;a++){let r=n.slice(a-t,a),l=e.slice(a-t,a),$=await module.exports.sma(r,t),s=[],i=await module.exports.sma(l,t);for(let u=0;u<t;u++)s.push((r[u]-$[0])*(l[u]-i[0]));s=await module.exports.sum(s),_.push(s/t)}return _}const range=(n,e,t)=>Math.floor(t?t()*(Math.floor(e)-Math.ceil(n))+Math.ceil(n):Math.random()*(Math.floor(e)-Math.ceil(n))+Math.ceil(n)),pick=(n,e)=>n[Math.floor(e?e()*Math.floor(n.length):Math.random()*Math.floor(n.length))],float=(n,e,t)=>t?t()*(e-n)+n:Math.random()*(e-n)+n;function prng(n){for(var e=0,t=1779033703^n.length;e<n.length;e++)t=(t=Math.imul(t^n.charCodeAt(e),3432918353))<<13|t>>>19;return t=Math.imul((t=Math.imul(t^t>>>16,2246822507))^t>>>13,3266489909),n=(t^=t>>>16)>>>0,function(){var e=n+=1831565813;return e=Math.imul(e^e>>>15,1|e),(((e^=e+Math.imul(e^e>>>7,61|e))^e>>>14)>>>0)/4294967296}}async function ncdf(n,e,t){var _=1/(1+.2315419*Math.abs(n=e||t?(n-e)/t:n)),a=.3989423*Math.exp(-n*n/2)*_*(.3193815+_*(-.3565638+_*(1.781478+_*(-1.821256+1.330274*_))));return n>0?1-a:a}async function zigzag(n,e=.05){let t=[],_=1/0,a=-1/0,r=!1,l=!1,$=[];if(Array.isArray(n[0]))for(let s=0;s<n.length;s++)if(r){t[t.length-1].value>=n[s][1]&&(t[t.length-1].value=n[s][1],t[t.length-1].index=s),_>=n[s][1]&&(_=n[s][1]);(n[s][0]-_)/_>e&&(t.push({index:s,value:n[s][0]}),l=!0,r=!1,_=1/0)}else if(l){t[t.length-1].value<=n[s][0]&&(t[t.length-1].value=n[s][0],t[t.length-1].index=s),a<=n[s][1]&&(a=n[s][1]);(a-n[s][1])/n[s][1]>e&&(t.push({index:s,value:n[s][1]}),r=!0,l=!1,a=-1/0)}else{_>=n[s][1]&&(_=n[s][1]),a<=n[s][0]&&(a=n[s][0]);let i=(n[s][0]-_)/_,u=(a-n[s][1])/a;u>e&&i<e?(r=!0,t.push({index:0,value:n[0][0]}),t.push({index:s,value:n[s][1]})):i>e&&u<e?(l=!0,t.push({index:0,value:n[0][1]}),t.push({index:s,value:n[s][0]})):u>i?(r=!0,t.push({index:0,value:n[0][0]}),t.push({index:s,value:n[s][1]})):(l=!0,t.push({index:0,value:n[0][1]}),t.push({index:s,value:n[s][0]}))}else for(let h=0;h<n.length;h++)if(r){t[t.length-1].value>=n[h]&&(t[t.length-1].value=n[h],t[t.length-1].index=h),_>=n[h]&&(_=n[h]);(n[h]-_)/_>e&&(t.push({index:h,value:n[h]}),l=!0,r=!1,_=1/0)}else if(l){t[t.length-1].value<=n[h]&&(t[t.length-1].value=n[h],t[t.length-1].index=h),a<=n[h]&&(a=n[h]);(a-n[h])/n[h]>e&&(t.push({index:h,value:n[h]}),r=!0,l=!1,a=-1/0)}else{_>=n[h]&&(_=n[h]),a<=n[h]&&(a=n[h]);let o=(n[h]-_)/_,p=(a-n[h])/a;p>e&&o<e?(r=!0,t.push({index:0,value:n[0]}),t.push({index:h,value:n[h]})):o>e&&p<e?(l=!0,t.push({index:0,value:n[0]}),t.push({index:h,value:n[h]})):p>o?(r=!0,t.push({index:0,value:n[0]}),t.push({index:h,value:n[h]})):(l=!0,t.push({index:0,value:n[0]}),t.push({index:h,value:n[h]}))}$=[t[0].value];for(let c=1;c<t.length;c++){let g=t[c].index-t[c-1].index,f=(t[c].value-t[c-1].value)/g;for(let v=1;v<=g;v++)$.push(v*f+t[c-1].value)}return $}async function psar(n,e=.02,t=.2){let _=n[0],a=!0,r=e,l=n[0],$=n[0][1],s=n[0][0],i=[$];for(let u=1;u<n.length;u++)$+=r*(s-$),a?($=Math.min($,_[1],l[1]),n[u][0]>s&&(s=n[u][0],r=Math.min(r+e,t))):($=Math.max($,_[0],l[0]),n[u][1]<s&&(s=n[u][0],r=Math.min(r+e,t))),(a&&n[u][1]<$||!a&&n[u][0]>$)&&(r=e,$=s,s=(a=!a)?n[u][0]:n[u][1]),_=l,l=n[u],i.push($);return i}async function fibbands(n,e=20,t=3){for(var _=0,a=[],r=[],l=await module.exports.vwma(n,e);_<n.length;_++)if(a.push(n[_][0]),a.length>=e){var $=await module.exports.std(a,e);r.push($*t),a.splice(0,1)}for(var _=0,s=[];_<l.length;_++){let i=l[_]+.236*r[_],u=l[_]+.382*r[_],h=l[_]+.5*r[_],o=l[_]+.618*r[_],p=l[_]+.764*r[_],c=l[_]+r[_],g=l[_]-.236*r[_],f=l[_]-.382*r[_],v=l[_]-.5*r[_],m=l[_]-.618*r[_],w=l[_]-.764*r[_],y=l[_]-r[_];s.push([c,p,o,h,u,i,l[_],g,f,v,m,w,y])}return s}async function supertrend(n,e=20,t=3){for(var _=e-1,a=await module.exports.atr(n,e),r=[];_<n.length;_++)r.push([(n[_][0]+n[_][2])/2+t*a[_],(n[_][0]+n[_][2])/2-t*a[_]]);return r}async function cwma(n,e){for(var t=e.length,_=[];t<=n.length;t++){for(var a=n.slice(t-e.length,t),r=0,l=0,$=0;$<e.length;$++)r+=a[$]*e[$],l+=e[$];_.push(r/l)}return _}const fibnumbers=[0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181],permutations=async n=>n.reduce((n,e)=>n*e);async function mse(n,e){for(var t=0,_=0;t<n.length;t++)_+=Math.pow(e[t]-n[t],2);return _/n.length}async function cum(n,e){for(var t=e,_=[];t<=n.length;t++)_.push(await module.exports.sum(n.slice(t-e,t)));return _}async function vwwma(n,e=20){n=n.map(n=>[n[0]*n[1],n[1]]);for(var t=1,_=0;t<=e;t++)_+=t;for(var t=e,a=[];t<=n.length;t++){var r=n.slice(t-e,t),l=0,$=0;for(q in r)l+=r[q][1]*(Number(q)+1)/_,$+=r[q][0]*(Number(q)+1)/_;a.push($/l)}return a}async function elderray(n,e=13){for(var t=e,_=[];t<=n.length;t++){var a=n.slice(t-e,t),r=Math.min.apply(void 0,a),l=Math.max.apply(void 0,a),$=await module.exports.ema(a,a.length);_.push([l-$[0],r-$[0]])}return _}async function hv(n,e=10){for(var t=e,_=[];t<=n.length;t++){var a=await ssd(n.slice(t-e,t))/e;_.push(Math.sqrt(a))}return _}const t_table=[{value:.5,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0},{value:.25,1:1,2:.816,3:.765,4:.741,5:.727,6:.718,7:.711,8:.706,9:.703,10:.7,11:.697,12:.695,13:.694,14:.692,15:.691,16:.69,17:.689,18:.688,19:.688,20:.687,21:.686,22:.686,23:.685,24:.685,25:.684},{value:.2,1:1.376,2:1.061,3:.978,4:.941,5:.92,6:.906,7:.896,8:.889,9:.883,10:.879,11:.876,12:.873,13:.87,14:.868,15:.866,16:.865,17:.863,18:.862,19:.861,20:.86,21:.859,22:.858,23:.858,24:.857,25:.856},{value:.15,1:1.963,2:1.386,3:1.25,4:1.19,5:1.156,6:1.134,7:1.119,8:1.108,9:1.1,10:1.093,11:1.088,12:1.088,13:1.079,14:1.076,15:1.074,16:1.071,17:1.069,18:1.067,19:1.066,20:1.064,21:1.063,22:1.061,23:1.06,24:1.059,25:1.058},{value:.1,1:3.078,2:1.886,3:1.638,4:1.533,5:1.476,6:1.44,7:1.415,8:1.397,9:1.383,10:1.372,11:1.363,12:1.356,13:1.35,14:1.345,15:1.341,16:1.337,17:1.333,18:1.33,19:1.328,20:1.325,21:1.323,22:1.321,23:1.319,24:1.318,25:1.316},{value:.05,1:6.314,2:2.92,3:2.353,4:2.132,5:2.015,6:1.943,7:1.895,8:1.86,9:1.833,10:1.812,11:1.796,12:1.782,13:1.771,14:1.761,15:1.753,16:1.746,17:1.74,18:1.734,19:1.729,20:1.725,21:1.721,22:1.717,23:1.714,24:1.711,25:1.708},{value:.025,1:12.71,2:4.303,3:3.182,4:2.776,5:2.571,6:2.447,7:2.365,8:2.306,9:2.262,10:2.228,11:2.201,12:2.179,13:2.16,14:2.145,15:2.131,16:2.12,17:2.11,18:2.101,19:2.093,20:2.086,21:2.08,22:2.074,23:2.069,24:2.064,25:2.06},{value:.01,1:31.82,2:6.965,3:4.541,4:3.747,5:3.365,6:3.143,7:2.998,8:2.896,9:2.821,10:2.764,11:2.718,12:2.681,13:2.65,14:2.624,15:2.602,16:2.583,17:2.567,18:2.552,19:2.539,20:2.528,21:2.518,22:2.508,23:2.5,24:2.492,25:2.485},{value:.005,1:63.66,2:9.925,3:5.841,4:4.604,5:4.032,6:3.707,7:3.499,8:3.355,9:3.25,10:3.169,11:3.106,12:3.055,13:3.012,14:2.977,15:2.947,16:2.921,17:2.898,18:2.878,19:2.861,20:2.845,21:2.831,22:2.819,23:2.807,24:2.797,25:2.787},{value:.001,1:318.13,2:22.327,3:10.215,4:7.173,5:5.893,6:5.208,7:4.785,8:4.501,9:4.297,10:4.144,11:4.025,12:3.93,13:3.852,14:3.787,15:3.733,16:3.686,17:3.646,18:3.61,19:3.579,20:3.552,21:3.527,22:3.505,23:3.485,24:3.467,25:3.45},{value:5e-4,1:636.62,2:31.599,3:12.924,4:8.61,5:6.869,6:5.959,7:5.408,8:5.041,9:4.781,10:4.587,11:4.437,12:4.318,13:4.221,14:4.14,15:4.073,16:4.015,17:3.965,18:3.922,19:3.883,20:3.85,21:3.819,22:3.792,23:3.768,24:3.745,25:3.725}];async function pvalue(n,e){for(var t=0;t<t_table.length-1;t++)if(n>=t_table[t][Number(e).toString()]&&n<=t_table[Number(t)+1][Number(e).toString()])return Math.round((t_table[t].value+t_table[Number(t)+1].value)/2*1e5)/1e5;return 5e-4}const random={range,pick,float,prng};const aroon={up:aroon_up,down:aroon_down,osc:aroon_osc};
